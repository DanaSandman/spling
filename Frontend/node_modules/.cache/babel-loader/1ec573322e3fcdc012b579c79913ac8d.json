{"ast":null,"code":"var _jsxFileName = \"/Users/dana/Desktop/TapTouch/Frontend/src/cmps/Select.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setMediaType, setMediaLink } from \"../store/action.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mediaTypes = [{\n  value: \"instegram\",\n  label: \"לינק לאינסטגרם\"\n}, {\n  value: \"facebook\",\n  label: \"לינק לפייסבוק\"\n}, {\n  value: \"tiktok\",\n  label: \"לינק לטיקטוק\"\n}, {\n  value: \"twitter\",\n  label: \"לינק לטוויטר\"\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  }\n}));\nexport function MultilineTextFields() {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [type, setType] = React.useState(\"instegram\"); //   const { mediaType } = useSelector((state) => state.mediaModule);\n\n  useEffect(() => {\n    dispatch(setMediaType(type));\n  }, [type]);\n\n  const handleChange = event => {\n    console.log(\"event.target.value\", event.target.value);\n    setType(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-select-currency\",\n        select: true,\n        label: \"\",\n        value: type,\n        onChange: handleChange,\n        helperText: \"\",\n        variant: \"outlined\",\n        children: mediaTypes.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultilineTextFields, \"f9WQWDF6dUF/QO/hxu42OdyS6n0=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = MultilineTextFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultilineTextFields\");","map":{"version":3,"sources":["/Users/dana/Desktop/TapTouch/Frontend/src/cmps/Select.jsx"],"names":["React","useEffect","makeStyles","TextField","MenuItem","useSelector","useDispatch","setMediaType","setMediaLink","mediaTypes","value","label","useStyles","theme","root","margin","spacing","width","MultilineTextFields","dispatch","classes","type","setType","useState","handleChange","event","console","log","target","map","option"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,oBAA3C;;AAEA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADiB,EAKjB;AACED,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALiB,EASjB;AACED,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATiB,EAajB;AACED,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbiB,CAAnB;AAmBA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,4BAAwB;AACtBC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADc;AAEtBC,MAAAA,KAAK,EAAE;AAFe;AADpB;AADiC,CAAZ,CAAD,CAA5B;AASA,OAAO,SAASC,mBAAT,GAA+B;AAAA;;AACpC,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBtB,KAAK,CAACuB,QAAN,CAAe,WAAf,CAAxB,CAHoC,CAKpC;;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CAACZ,YAAY,CAACc,IAAD,CAAb,CAAR;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;;AAIA,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAK,CAACG,MAAN,CAAalB,KAA/C;AACAY,IAAAA,OAAO,CAACG,KAAK,CAACG,MAAN,CAAalB,KAAd,CAAP;AACD,GAHD;;AAKA,sBACE;AAAM,IAAA,SAAS,EAAEU,OAAO,CAACN,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAA0C,IAAA,YAAY,EAAC,KAAvD;AAAA,2BACE;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,0BADL;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,KAAK,EAAC,EAHR;AAIE,QAAA,KAAK,EAAEO,IAJT;AAKE,QAAA,QAAQ,EAAEG,YALZ;AAME,QAAA,UAAU,EAAC,EANb;AAOE,QAAA,OAAO,EAAC,UAPV;AAAA,kBASGf,UAAU,CAACoB,GAAX,CAAgBC,MAAD,iBACd,QAAC,QAAD;AAA6B,UAAA,KAAK,EAAEA,MAAM,CAACpB,KAA3C;AAAA,oBACGoB,MAAM,CAACnB;AADV,WAAemB,MAAM,CAACpB,KAAtB;AAAA;AAAA;AAAA;AAAA,gBADD;AATH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GArCeQ,mB;UACGZ,W,EACDM,S;;;KAFFM,mB","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setMediaType, setMediaLink } from \"../store/action.js\";\n\nconst mediaTypes = [\n  {\n    value: \"instegram\",\n    label: \"לינק לאינסטגרם\",\n  },\n  {\n    value: \"facebook\",\n    label: \"לינק לפייסבוק\",\n  },\n  {\n    value: \"tiktok\",\n    label: \"לינק לטיקטוק\",\n  },\n  {\n    value: \"twitter\",\n    label: \"לינק לטוויטר\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n}));\n\nexport function MultilineTextFields() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [type, setType] = React.useState(\"instegram\");\n\n  //   const { mediaType } = useSelector((state) => state.mediaModule);\n  \n  useEffect(() => {\n    dispatch(setMediaType(type));\n  }, [type]);\n\n  const handleChange = (event) => {\n    console.log(\"event.target.value\", event.target.value);\n    setType(event.target.value);\n  };\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField\n          id=\"outlined-select-currency\"\n          select\n          label=\"\"\n          value={type}\n          onChange={handleChange}\n          helperText=\"\"\n          variant=\"outlined\"\n        >\n          {mediaTypes.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}