{"ast":null,"code":"import { orderService } from '../services/order.service.js';\nexport function setMediaLink(mediaLink) {\n  console.log('action mediaLink', mediaLink);\n  return async dispatch => {\n    try {\n      dispatch({\n        type: 'SET_MEDIA_LINK',\n        mediaLink\n      });\n    } catch (err) {\n      console.log('Name Actions: err in loaded Names', err);\n    }\n  };\n}\nexport function setMediaType(mediaName) {\n  console.log('action mediaName', mediaName);\n  return async dispatch => {\n    try {\n      dispatch({\n        type: 'SELECTED_MEDIA_TYPE',\n        mediaName\n      });\n    } catch (err) {\n      console.log('Order Actions: err in set order', err);\n    }\n  };\n}\nexport function setOrderDetails(orderDetails) {\n  console.log('action orderDetails', orderDetails);\n  return async dispatch => {\n    try {\n      dispatch({\n        type: 'SET_ORDER',\n        orderDetails\n      });\n    } catch (err) {\n      console.log('Actions: err in set order', err);\n    }\n  };\n}\nexport function orderCompleted(orderDetails) {\n  return async dispatch => {\n    try {\n      console.log('orderDetails sfsffsff', orderDetails);\n      const lowProfile = orderDetails.lowProfileCode;\n      await orderService.saveOrder(orderDetails);\n      const cardComLink = await orderService.charge('testp', 105.2); // orderDetails\n      // orderService.saveOrder\n\n      dispatch({\n        type: 'SET_CARDCOME_LINK',\n        cardComLink\n      });\n    } catch (err) {\n      console.log('Actions: err in set order', err);\n    }\n  };\n}\nexport function transactionSuccess(lowProfileCode) {\n  console.log('actionnn transactionSuccess');\n  return async dispatch => {\n    try {\n      //check if the transaction approves in cardcom and get the details//\n      const approvalNumber = await orderService.getPaymentDetails(lowProfileCode);\n      console.log('approvalNumber', approvalNumber); // update my on DB with the transaction details//\n      // const cardComLink =  await orderService.savePaymentDetails(approvalNumber);\n\n      dispatch({\n        type: 'SET_PAYMENT_DETAILS',\n        approvalNumber\n      });\n    } catch (err) {\n      console.log('Actions: err in set order', err);\n    }\n  };\n}","map":{"version":3,"sources":["/Users/dana/Desktop/TapTouch/Frontend/src/store/action.js"],"names":["orderService","setMediaLink","mediaLink","console","log","dispatch","type","err","setMediaType","mediaName","setOrderDetails","orderDetails","orderCompleted","lowProfile","lowProfileCode","saveOrder","cardComLink","charge","transactionSuccess","approvalNumber","getPaymentDetails"],"mappings":"AAAA,SACIA,YADJ,QAEO,8BAFP;AAIA,OAAO,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,SAAhC;AACA,SAAO,MAAMG,QAAN,IAAkB;AACrB,QAAI;AACAA,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,gBADD;AAELJ,QAAAA;AAFK,OAAD,CAAR;AAIH,KALD,CAKE,OAAOK,GAAP,EAAY;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDG,GAAjD;AACH;AACJ,GATD;AAUH;AACD,OAAO,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AACpCN,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCK,SAAhC;AACA,SAAO,MAAMJ,QAAN,IAAkB;AACrB,QAAI;AACAA,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,qBADD;AAELG,QAAAA;AAFK,OAAD,CAAR;AAIH,KALD,CAKE,OAAOF,GAAP,EAAY;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CG,GAA/C;AACH;AACJ,GATD;AAUH;AACD,OAAO,SAASG,eAAT,CAAyBC,YAAzB,EAAuC;AAC1CR,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,YAAnC;AACA,SAAO,MAAMN,QAAN,IAAkB;AACrB,QAAI;AACAA,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,WADD;AAELK,QAAAA;AAFK,OAAD,CAAR;AAIH,KALD,CAKE,OAAOJ,GAAP,EAAY;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCG,GAAzC;AACH;AACJ,GATD;AAUH;AACD,OAAO,SAASK,cAAT,CAAwBD,YAAxB,EAAsC;AAEzC,SAAO,MAAMN,QAAN,IAAkB;AACrB,QAAI;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCO,YAApC;AACA,YAAME,UAAU,GAAGF,YAAY,CAACG,cAAhC;AACA,YAAMd,YAAY,CAACe,SAAb,CAAuBJ,YAAvB,CAAN;AACA,YAAMK,WAAW,GAAI,MAAMhB,YAAY,CAACiB,MAAb,CAAoB,OAApB,EAA4B,KAA5B,CAA3B,CAJA,CAMA;AACA;;AACAZ,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,mBADD;AAELU,QAAAA;AAFK,OAAD,CAAR;AAIH,KAZD,CAYE,OAAOT,GAAP,EAAY;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCG,GAAzC;AACH;AACJ,GAhBD;AAiBH;AACD,OAAO,SAASW,kBAAT,CAA4BJ,cAA5B,EAA4C;AACnDX,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACI,SAAO,MAAMC,QAAN,IAAkB;AAErB,QAAI;AACA;AACD,YAAMc,cAAc,GAAG,MAAMnB,YAAY,CAACoB,iBAAb,CAA+BN,cAA/B,CAA7B;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6Be,cAA7B,EAHC,CAKA;AACA;;AACAd,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAE,qBADD;AAELa,QAAAA;AAFK,OAAD,CAAR;AAIH,KAXD,CAWE,OAAOZ,GAAP,EAAY;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCG,GAAzC;AACH;AACJ,GAhBD;AAiBH","sourcesContent":["import {\n    orderService\n} from '../services/order.service.js';\n\nexport function setMediaLink(mediaLink) {\n    console.log('action mediaLink', mediaLink);\n    return async dispatch => {\n        try {\n            dispatch({\n                type: 'SET_MEDIA_LINK',\n                mediaLink\n            });\n        } catch (err) {\n            console.log('Name Actions: err in loaded Names', err);\n        }\n    };\n}\nexport function setMediaType(mediaName) {\n    console.log('action mediaName', mediaName);\n    return async dispatch => {\n        try {\n            dispatch({\n                type: 'SELECTED_MEDIA_TYPE',\n                mediaName\n            });\n        } catch (err) {\n            console.log('Order Actions: err in set order', err);\n        }\n    };\n}\nexport function setOrderDetails(orderDetails) {\n    console.log('action orderDetails', orderDetails);\n    return async dispatch => {\n        try {\n            dispatch({\n                type: 'SET_ORDER',\n                orderDetails\n            });\n        } catch (err) {\n            console.log('Actions: err in set order', err);\n        }\n    };\n}\nexport function orderCompleted(orderDetails) {\n\n    return async dispatch => {\n        try {\n            console.log('orderDetails sfsffsff',orderDetails);\n            const lowProfile = orderDetails.lowProfileCode\n            await orderService.saveOrder(orderDetails);\n            const cardComLink =  await orderService.charge('testp',105.2);\n\n            // orderDetails\n            // orderService.saveOrder\n            dispatch({\n                type: 'SET_CARDCOME_LINK',\n                cardComLink\n            });\n        } catch (err) {\n            console.log('Actions: err in set order', err);\n        }\n    };\n}\nexport function transactionSuccess(lowProfileCode) {\nconsole.log('actionnn transactionSuccess');\n    return async dispatch => {\n\n        try {\n            //check if the transaction approves in cardcom and get the details//\n           const approvalNumber = await orderService.getPaymentDetails(lowProfileCode);\n           console.log('approvalNumber',approvalNumber);\n\n            // update my on DB with the transaction details//\n            // const cardComLink =  await orderService.savePaymentDetails(approvalNumber);\n            dispatch({\n                type: 'SET_PAYMENT_DETAILS',\n                approvalNumber\n            });\n        } catch (err) {\n            console.log('Actions: err in set order', err);\n        }\n    };\n}"]},"metadata":{},"sourceType":"module"}