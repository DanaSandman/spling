{"ast":null,"code":"var _jsxFileName = \"/Users/dana/Desktop/starter-React-Scss-Router-Redux/src/pages/name/NameApp.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { setName } from '../../store/action.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NameApp() {\n  _s();\n\n  const dispatch = useDispatch();\n  dispatch(setName(dana));\n  const names = useSelector(state => state.nameModule.names);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"name app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: names\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NameApp, \"BdBphKvnrgeyZuzzXnV5WC5riJI=\", true, function () {\n  return [useSelector];\n});\n\n_c = NameApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameApp\");","map":{"version":3,"sources":["/Users/dana/Desktop/starter-React-Scss-Router-Redux/src/pages/name/NameApp.jsx"],"names":["useSelector","setName","NameApp","dispatch","useDispatch","dana","names","state","nameModule"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,OAAO,SAASC,OAAT,GAAkB;AAAA;;AACrB,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACAD,EAAAA,QAAQ,CAACF,OAAO,CAACI,IAAD,CAAR,CAAR;AACA,QAAMC,KAAK,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,UAAN,CAAiBF,KAA3B,CAAzB;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAVeJ,O;UAGEF,W;;;KAHFE,O","sourcesContent":["import { useSelector } from 'react-redux'\nimport { setName } from '../../store/action.js'\n\nexport function NameApp(){\n    const dispatch = useDispatch()\n    dispatch(setName(dana))\n    const names = useSelector(state => state.nameModule.names)\n    return (\n        <div>\n            <p>name app</p>\n            <p>{names}</p>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}