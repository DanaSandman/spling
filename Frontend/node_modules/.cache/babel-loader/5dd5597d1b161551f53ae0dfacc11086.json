{"ast":null,"code":"import { utilService } from \"./utilService.js\";\nconst gData = [];\nexport const storageService = {\n  query,\n  post\n}; //LIST\n\nasync function query(entityType, filterBy) {\n  let entities = (await JSON.parse(localStorage.getItem(entityType))) || [];\n\n  if (!entities || !entities.length) {\n    console.log('query');\n    entities = gData;\n\n    _save(entityType, entities);\n  }\n\n  console.log('entities', entities);\n  return entities;\n} //ADD\n\n\nasync function post(entityType, newEntity) {\n  console.log('storage', entityType, newEntity);\n  newEntity._id = utilService.makeId();\n  const entities = await query(entityType); // const entities = []\n\n  console.log(entities, 'entities');\n  entities.push(newEntity);\n\n  _save(entityType, entities);\n\n  return entities;\n} //SAVE TO STORAGE\n\n\nfunction _save(entityType, entities) {\n  console.log('save to storageeee');\n  localStorage.setItem(entityType, JSON.stringify(entities));\n}","map":{"version":3,"sources":["/Users/dana/Desktop/TapTouch/Frontend/src/services/order-storage.service.js"],"names":["utilService","gData","storageService","query","post","entityType","filterBy","entities","JSON","parse","localStorage","getItem","length","console","log","_save","newEntity","_id","makeId","push","setItem","stringify"],"mappings":"AAAA,SACIA,WADJ,QAEO,kBAFP;AAGA,MAAMC,KAAK,GAAG,EAAd;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC1BC,EAAAA,KAD0B;AAE1BC,EAAAA;AAF0B,CAAvB,C,CAIP;;AACA,eAAeD,KAAf,CAAqBE,UAArB,EAAiCC,QAAjC,EAA2C;AACvC,MAAIC,QAAQ,GAAG,OAAMC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBN,UAArB,CAAX,CAAN,KAAsD,EAArE;;AACA,MAAI,CAACE,QAAD,IAAa,CAACA,QAAQ,CAACK,MAA3B,EAAmC;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAP,IAAAA,QAAQ,GAAGN,KAAX;;AACFc,IAAAA,KAAK,CAACV,UAAD,EAAaE,QAAb,CAAL;AACD;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBP,QAAvB;AACA,SAAOA,QAAP;AACH,C,CACD;;;AACA,eAAeH,IAAf,CAAoBC,UAApB,EAAgCW,SAAhC,EAA2C;AACvCH,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBT,UAAtB,EAAiCW,SAAjC;AACAA,EAAAA,SAAS,CAACC,GAAV,GAAgBjB,WAAW,CAACkB,MAAZ,EAAhB;AACA,QAAMX,QAAQ,GAAG,MAAMJ,KAAK,CAACE,UAAD,CAA5B,CAHuC,CAIvC;;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ,EAAqB,UAArB;AACAA,EAAAA,QAAQ,CAACY,IAAT,CAAcH,SAAd;;AACCD,EAAAA,KAAK,CAACV,UAAD,EAAaE,QAAb,CAAL;;AACD,SAAOA,QAAP;AACH,C,CACD;;;AACA,SAASQ,KAAT,CAAeV,UAAf,EAA2BE,QAA3B,EAAqC;AACjCM,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAJ,EAAAA,YAAY,CAACU,OAAb,CAAqBf,UAArB,EAAiCG,IAAI,CAACa,SAAL,CAAed,QAAf,CAAjC;AACH","sourcesContent":["import {\n    utilService\n} from \"./utilService.js\";\nconst gData = [];\n\nexport const storageService = {\n    query,\n    post,\n};\n//LIST\nasync function query(entityType, filterBy) {\n    let entities = await JSON.parse(localStorage.getItem(entityType)) || [];\n    if (!entities || !entities.length) {\n        console.log('query');\n        entities = gData;\n      _save(entityType, entities);\n    }\n    console.log('entities',entities);\n    return entities;\n}\n//ADD\nasync function post(entityType, newEntity) {\n    console.log('storage',entityType,newEntity);\n    newEntity._id = utilService.makeId();\n    const entities = await query(entityType);\n    // const entities = []\n    console.log(entities,'entities');\n    entities.push(newEntity);\n     _save(entityType, entities);\n    return entities;\n}\n//SAVE TO STORAGE\nfunction _save(entityType, entities) {\n    console.log('save to storageeee');\n    localStorage.setItem(entityType, JSON.stringify(entities));\n}"]},"metadata":{},"sourceType":"module"}