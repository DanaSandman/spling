{"ast":null,"code":"var _jsxFileName = \"/Users/dana/Desktop/TapTouch/Frontend/src/pages/PaymentSuccess.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getOrder, transactionSuccess } from \"../store/action.js\";\nimport { orderService } from \"../services/order.service.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PaymentSuccess() {\n  _s();\n\n  const {\n    orderId\n  } = useParams(); // const dispatch = useDispatch();\n  // const { selectedOrder } = useSelector((state) => state.mediaModule);\n\n  const [selectedOrder, setSelectedOrder] = useState({});\n  useEffect(() => {\n    // dispatch(getOrder(orderId));\n    d(); //נשאר לחלץ משם את האפרוול נמבר ולהספיד אותו או לשמור אותו בדאטה בייס כעדכון לאורדר\n  }, []);\n  useEffect(() => {\n    // const paymentDetails = dispatch(transactionSuccess(selectedOrder.lowProfileCode));\n    console.log(\"selectedOrder siissccc\", selectedOrder);\n    const paymentDetails = orderService.getPaymentDetails(selectedOrder.lowProfileCode);\n    console.log(\"paymentDetails\", paymentDetails);\n  }, [selectedOrder]);\n\n  async function d() {\n    setSelectedOrder({\n      selectedOrder: await orderService.getOrderById(orderId)\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: orderId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u05EA\\u05D5\\u05D3\\u05D4 \\u05E9\\u05E7\\u05E0\\u05D9\\u05EA\\u05DD \\u05E1\\u05E4\\u05DC\\u05D9\\u05E0\\u05D2\\u05D2\\u05D2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n} // export function transactionSuccess(lowProfileCode) {\n// console.log('actionnn transactionSuccess');\n//     return async dispatch => {\n//         try {\n//             //check if the transaction approves in cardcom and get the details//\n//            const approvalNumber = await orderService.getPaymentDetails(lowProfileCode);\n//            console.log('approvalNumber',approvalNumber);\n//             // update my on DB with the transaction details//\n//             // const cardComLink =  await orderService.savePaymentDetails(approvalNumber);\n//             dispatch({\n//                 type: 'SET_PAYMENT_DETAILS',\n//                 approvalNumber\n//             });\n//         } catch (err) {\n//             console.log('Actions: err in set order', err);\n//         }\n//     };\n// }\n\n_s(PaymentSuccess, \"zlt4sGRexKZM2FFbIfgtAv59G3s=\", false, function () {\n  return [useParams];\n});\n\n_c = PaymentSuccess;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentSuccess\");","map":{"version":3,"sources":["/Users/dana/Desktop/TapTouch/Frontend/src/pages/PaymentSuccess.jsx"],"names":["React","Fragment","useState","useEffect","useParams","useSelector","useDispatch","getOrder","transactionSuccess","orderService","PaymentSuccess","orderId","selectedOrder","setSelectedOrder","d","console","log","paymentDetails","getPaymentDetails","lowProfileCode","getOrderById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,oBAA7C;AAEA,SAASC,YAAT,QAA6B,8BAA7B;;AAEA,OAAO,SAASC,cAAT,GAA0B;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAcP,SAAS,EAA7B,CAD+B,CAE/B;AACA;;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAW,IAAAA,CAAC,GAFa,CAGd;AACD,GAJQ,EAIN,EAJM,CAAT;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCJ,aAAtC;AACA,UAAMK,cAAc,GAAGR,YAAY,CAACS,iBAAb,CACrBN,aAAa,CAACO,cADO,CAAvB;AAGAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,cAA9B;AACD,GAPQ,EAON,CAACL,aAAD,CAPM,CAAT;;AASF,iBAAeE,CAAf,GAAkB;AAChBD,IAAAA,gBAAgB,CAAC;AAAED,MAAAA,aAAa,EAAG,MAAMH,YAAY,CAACW,YAAb,CAA0BT,OAA1B;AAAxB,KAAD,CAAhB;AACA;;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAnDgBD,c;UACMN,S;;;KADNM,c","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getOrder, transactionSuccess } from \"../store/action.js\";\n\nimport { orderService } from \"../services/order.service.js\";\n\nexport function PaymentSuccess() {\n  const { orderId } = useParams();\n  // const dispatch = useDispatch();\n  // const { selectedOrder } = useSelector((state) => state.mediaModule);\n  const [selectedOrder, setSelectedOrder] = useState({});\n\n  useEffect(() => {\n    // dispatch(getOrder(orderId));\n    d()\n    //נשאר לחלץ משם את האפרוול נמבר ולהספיד אותו או לשמור אותו בדאטה בייס כעדכון לאורדר\n  }, []);\n  useEffect(() => {\n    // const paymentDetails = dispatch(transactionSuccess(selectedOrder.lowProfileCode));\n    console.log(\"selectedOrder siissccc\", selectedOrder);\n    const paymentDetails = orderService.getPaymentDetails(\n      selectedOrder.lowProfileCode\n    );\n    console.log(\"paymentDetails\", paymentDetails);\n  }, [selectedOrder]);\n  \nasync function d(){\n  setSelectedOrder({ selectedOrder:  await orderService.getOrderById(orderId) });\n }\n\n  return (\n    <Fragment>\n      <h2>{orderId}</h2>\n      <h1>תודה שקניתם ספלינגגג</h1>\n    </Fragment>\n  );\n}\n\n// export function transactionSuccess(lowProfileCode) {\n// console.log('actionnn transactionSuccess');\n//     return async dispatch => {\n\n//         try {\n//             //check if the transaction approves in cardcom and get the details//\n//            const approvalNumber = await orderService.getPaymentDetails(lowProfileCode);\n//            console.log('approvalNumber',approvalNumber);\n\n//             // update my on DB with the transaction details//\n//             // const cardComLink =  await orderService.savePaymentDetails(approvalNumber);\n//             dispatch({\n//                 type: 'SET_PAYMENT_DETAILS',\n//                 approvalNumber\n//             });\n//         } catch (err) {\n//             console.log('Actions: err in set order', err);\n//         }\n//     };\n// }\n"]},"metadata":{},"sourceType":"module"}