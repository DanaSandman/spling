{"ast":null,"code":"import { nameService } from '../../services/name.service.js';\nexport function loadNames(filterBy) {\n  return async dispatch => {\n    try {\n      // const names = await nameService.query(filterBy);\n      const names = ['bibi', 'zibi', 'bubu'];\n      dispatch({\n        type: 'SET_NAMES',\n        names\n      });\n    } catch (err) {\n      console.log('Name Actions: err in loaded Names', err);\n    }\n  };\n}\nexport function setName(name) {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: 'SET_NAME',\n        name\n      });\n    } catch (err) {\n      console.log('Name Actions: err in loaded Names', err);\n    }\n  };\n}","map":{"version":3,"sources":["/Users/dana/Desktop/starter-React-Scss-Router-Redux/src/store/action.js"],"names":["nameService","loadNames","filterBy","dispatch","names","type","err","console","log","setName","name"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gCAA5B;AAEA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAChC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACA;AACA,YAAMC,KAAK,GAAG,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,CAAd;AACAD,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,WAAR;AAAqBD,QAAAA;AAArB,OAAD,CAAR;AACH,KAJD,CAIE,OAAOE,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,GAAjD;AACH;AACJ,GARD;AASH;AAED,OAAO,SAASG,OAAT,CAAiBC,IAAjB,EAAuB;AAC1B,SAAO,MAAMP,QAAN,IAAkB;AACrB,QAAI;AACAA,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,UAAR;AAAoBK,QAAAA;AAApB,OAAD,CAAR;AACH,KAFD,CAEE,OAAOJ,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,GAAjD;AACH;AACJ,GAND;AAOH","sourcesContent":["import { nameService } from '../../services/name.service.js';\n\nexport function loadNames(filterBy) {\n    return async dispatch => {\n        try {\n            // const names = await nameService.query(filterBy);\n            const names = ['bibi','zibi','bubu']\n            dispatch({ type: 'SET_NAMES', names });\n        } catch (err) {\n            console.log('Name Actions: err in loaded Names', err);\n        }\n    };\n}\n\nexport function setName(name) {\n    return async dispatch => {\n        try {\n            dispatch({ type: 'SET_NAME', name });\n        } catch (err) {\n            console.log('Name Actions: err in loaded Names', err);\n        }\n    };\n}"]},"metadata":{},"sourceType":"module"}