{"ast":null,"code":"export const utilService = {\n  delay,\n  getRandomInt,\n  makeId\n};\n\nfunction delay(ms = 1500) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction makeId(length = 5) {\n  var txt = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return txt;\n}","map":{"version":3,"sources":["/Users/dana/Desktop/spling/Frontend/src/services/utilService.js"],"names":["utilService","delay","getRandomInt","makeId","ms","Promise","resolve","setTimeout","min","max","Math","ceil","floor","random","length","txt","possible","i","charAt"],"mappings":"AACA,OAAO,MAAMA,WAAW,GAAG;AACvBC,EAAAA,KADuB;AAEvBC,EAAAA,YAFuB;AAGvBC,EAAAA;AAHuB,CAApB;;AAMP,SAASF,KAAT,CAAeG,EAAE,GAAG,IAApB,EAA0B;AACtB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1BC,IAAAA,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAV;AACH,GAFM,CAAP;AAGH;;AAED,SAASF,YAAT,CAAsBM,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5BD,EAAAA,GAAG,GAAGE,IAAI,CAACC,IAAL,CAAUH,GAAV,CAAN;AACAC,EAAAA,GAAG,GAAGC,IAAI,CAACE,KAAL,CAAWH,GAAX,CAAN;AACA,SAAOC,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBJ,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAP,CAH4B,CAG0B;AACzD;;AAED,SAASL,MAAT,CAAgBW,MAAM,GAAG,CAAzB,EAA4B;AACxB,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,QAAQ,GAAG,gEAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;AAC7BF,IAAAA,GAAG,IAAIC,QAAQ,CAACE,MAAT,CAAgBR,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,KAAgBG,QAAQ,CAACF,MAApC,CAAhB,CAAP;AACH;;AACD,SAAOC,GAAP;AACH","sourcesContent":["\nexport const utilService = {\n    delay,\n    getRandomInt,\n    makeId\n}\n\nfunction delay(ms = 1500) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms)\n    })\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction makeId(length = 5) {\n    var txt = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < length; i++) {\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return txt;\n}"]},"metadata":{},"sourceType":"module"}